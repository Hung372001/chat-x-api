version: '3'

services:
  api-service:
    image: '${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}'
    ports:
      - '3002:3000'
    volumes:
      - /home/chat-x-api/.env:/app/.env
      - /home/chat-x-api/files:/app/files
      - $HOME/.aws/credentials:/home/app/.aws/credentials:ro
    environment:
      - TZ=Asia/Bangkok
    dns:
      - 8.8.8.8
    deploy:
      mode: replicated
      placement:
        constraints: [node.role == manager]
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
    networks:
      - chat-x_net
  postgres-server:
    image: "postgres"
    volumes: 
      - /home/chat-x-api/postgres:/data/postgres
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/data/postgres
      - POSTGRES_DB=${POSTGRES_DB}
    command: [ "postgres", "-c", "wal_level=logical" ]
    deploy:
      placement:
          constraints: [node.role == manager]
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
    networks:
      - chat-x_net
  redis-server:
    image: 'redis:6.0-alpine'
    volumes:
      - /home/chat-x-api/redis:/data
      - /home/chat-x-api/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6380:6379'
    deploy:
      placement:
        constraints: [node.role == manager]
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
    networks:
      - chat-x_net
networks:
  chat-x_net:
    driver: overlay